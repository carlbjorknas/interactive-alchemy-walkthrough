@using InteractiveAlchemyWalkthrough.Models;

@model IOrderedEnumerable<IGrouping<int, Element>>

@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h2>The Interactive Alchemy Walkthrough</h2>
    <a href="https://play.google.com/store/apps/details?id=me.zed_0xff.android.alchemy">Alchemy</a> is a game where you start with the four elements and then combine them to get new elements.
    <br />
    Click on an element to see how to reach it and what it can become.
    <br />
    The source of the recipes are <a href="http://alchemycheat.com/zeds-alchemy/">http://alchemycheat.com/zeds-alchemy/</a>
    <br />
    The source code is here <a href="https://github.com/carlbjorknas/interactive-alchemy-walkthrough">https://github.com/carlbjorknas/interactive-alchemy-walkthrough</a>
    <br />
    Happy mixing! &lt;|:^)
</div>

<div class="element end-of-line">
    Elements with this kind of border cannot be used in a combination.
</div>
<br />
<br />
<div>
    @foreach (var group in Model)
    {
        <div class="level">
            <span>Level @group.Key</span>

            <div class="elements">
                @foreach (var element in group.OrderBy(e => e.EndOfLine))
                {
                    <div id="@element.Id" class="element @(element.EndOfLine ? "end-of-line": "")" data-ancestors="[@(string.Join(",", element.AncestorIds))]" data-descendents="[@(string.Join(",", element.Descendents))]">
                        @foreach (var parentPair in element.PossibleParents)
                        {
                            @(string.Format("{0} + {1}", parentPair.FirstParent.Name, parentPair.SecondParent.Name))
                            <br />
                        }
                        <b>@element.Name</b>
                    </div>
                }
            </div>
        </div>
    }
</div>
@section scripts {
    @Scripts.Render("~/Scripts/tiaw.js")
 }
